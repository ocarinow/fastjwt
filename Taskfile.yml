version: "3"

dotenv:
  - .env

includes:
  hooks: tasks/hooks.Taskfile.yml
  serve: tasks/serve.Taskfile.yml

tasks:
  init:
    desc: Init the package
    cmds:
      - poetry install
      - pre-commit install
  lock:
    desc: Lock the dependencies as requirements.txt
    cmds:
      - poetry export --with dev --without-hashes -f requirements.txt --output requirements.txt
  release:
    desc: Emulate a new release locally
    cmds:
      - poetry run semantic-release version --no-vcs-release --no-push --skip-build --no-tag --no-changelog --no-commit
  test:
    cmds:
      - poetry run pytest tests/
  badges:
    cmds:
      - poetry run genbadge tests -i reports/junit.xml -o - > reports/tests-badge.svg
      - poetry run genbadge coverage -i reports/coverage.xml -o - > reports/coverage-badge.svg
      - poetry run genbadge flake8 -i reports/flake8stats.txt -o - > reports/flake8-badge.svg
  report:
    cmds:
      - task: test
      - task: cov:doc
      - task: flake8
      - task: badges
  env:
    cmds:
      - cat .env.{{.CLI_ARGS}} > .env && echo "Activate <{{.CLI_ARGS}}> environment variables"
  mike:
    vars:
      TAG: $(poetry version | grep -E -o "\d+\.\d+" | head -n 1)
    cmds:
      - mike deploy --push --update-aliases {{.TAG}} latest
