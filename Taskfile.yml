version: "3"

dotenv:
  - .env

includes:
  badges: tasks/badges.Taskfile.yml
  hooks: tasks/hooks.Taskfile.yml
  serve: tasks/serve.Taskfile.yml

tasks:
  init:
    desc: Init the package
    cmds:
      - poetry install
      - pre-commit install
  lock:
    desc: Lock the dependencies as requirements.txt
    cmds:
      - poetry export --with dev --without-hashes -f requirements.txt --output requirements.txt
  release:
    desc: Simulate a new release locally
    cmds:
      - poetry run semantic-release version --print --no-vcs-release --no-push --skip-build --no-tag --no-changelog --no-commit
  test:
    desc: Run all tests
    cmds:
      - poetry run pytest tests/
  env:
    desc: Set environment variables
    cmds:
      - cat .env.{{.CLI_ARGS}} > .env && echo "Activate <{{.CLI_ARGS}}> environment variables"
  mike:
    desc: Deploy documentation
    vars:
      TAG: $(poetry version | grep -E -o "\d+\.\d+" | head -n 1)
    cmds:
      - mike deploy --push --update-aliases {{.TAG}} latest
