[tool.poetry]
name = "fastjwt"
version = "0.2.1"
description = "FastAPI Plugin for reusable JWT Authentication Management"
authors = ["Walid BENBIHI <contact@ocarinow.com>"]
homepage = "https://github.com/ocarinow/fastjwt"
repository = "https://github.com/ocarinow/fastjwt"
keywords = ["fastapi", "jwt", "JSON-Web-Token", "authentication", "security", "api"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "fastjwt/"}
]

[tool.poetry.dependencies]
python = ">=3.9"
pydantic = "^1.10.5"
pyjwt = {extras = ["crypto"], version = "^2.6.0"}
typing-extensions = {version = "^4.5.0", python = "<=3.9"}


[tool.poetry.group.dev.dependencies]
fastapi = "^0.92.0"
uvicorn = "^0.20.0"
black = "^23.1.0"
pre-commit = "^3.1.1"
flake8 = "^6.0.0"
isort = "^5.12.0"
python-semantic-release = "^7.33.2"
dateparser = "^1.1.7"
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
coverage = {extras = ["toml"], version = "^7.2.1"}
pytest-asyncio = "^0.20.3"
genbadge = {extras = ["all"], version = "^1.1.0"}
docstr-coverage = "^2.2.0"
mkdocs-material = "^9.1.1"
mkdocstrings = {extras = ["python"], version = "^0.20.0"}

[tool.isort]
profile = "black"
length_sort = true

[tool.coverage.run]
branch = true
data_file = "reports/.coverage"
source = ['fastjwt']

[tool.coverage.html]
title = "fastjwt coverage report"
directory = "reports/coverage"
show_contexts = true

[tool.coverage.xml]
output = "reports/coverage.xml"

[tool.pytest.ini_options]
addopts = "--junitxml=reports/junit.xml --cov=fastjwt --cov-report=html --cov-report=xml --cov-context=test"
filterwarnings = ["ignore::DeprecationWarning"]

[tool.semantic_release]
version_variable = [
    "fastjwt/__init__.py:__version__",
]
version_toml= "pyproject.toml:tool.poetry.version"
version_source= "commit"
prerelease_tag= "rc"
tag_commit = true
branch = "main"
upload_to_repository = false
upload_to_release = true
commit_parser = "ci.commit_parser.ocarinow_commit_parser"
build_command = "pip install poetry && poetry build"
changelog_file="CHANGELOG.md"
changelog_placeholder="<!--next-version-placeholder-->"
REPOSITORY_USERNAME="__token__"
pre_commit_command = "bash ci/pre_commit_command.sh"
include_additional_files="reports/flake8-badge.svg,reports/tests-badge.svg,reports/coverage-badge.svg,reports/docstr-badge.svg"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
